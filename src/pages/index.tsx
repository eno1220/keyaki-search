import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import { TextInput, Button, Flex, Text, Select } from "@mantine/core";
import { useForm } from "@mantine/form";
import { DateInput } from "@mantine/dates";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const form = useForm({
    initialValues: {
      text: "",
      site: "",
      file: "",
      begin: "",
      end: "",
    },
    validate: {
      text: (value) => {
        if (!value) {
          return "検索ワードを入力してください";
        }
      },
      begin: (value) => {
        if (value && value > form.values.end) {
          return "開始日は終了日より前に設定してください";
        }
      },
    },
  });

  console.log(form.values);

  const onClick = () => {
    form.validate();
    if (form.errors) {
      return;
    }
    const params = new URLSearchParams();
    if (form.values.text) {
      params.append("q", form.values.text);
    } else {
      return;
    }
    if (form.values.site) {
      params.append("as_sitesearch", form.values.site);
    }
    if (form.values.file) {
      params.append("as_filetype", form.values.file);
    }
    if (form.values.begin) {
      params.append("tbs", `cdr:1,cd_min:${form.values.begin}`);
    }
    if (form.values.end) {
      params.append("tbs", `cdr:1,cd_max:${form.values.end}`);
    }
    const url = `https://www.google.com/search?${params.toString()}`;
    window.open(url, "_blank");
  };

  // todo: UI部分をコンポーネントにして切り出す
  // todo: もっと様々な検索条件を追加する
  return (
    <>
      <Head>
        <title>Keyaki Search</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Flex mx="auto" align="center" maw={700} my={20} gap={10} px={4}>
          <TextInput
            radius="sm"
            size="md"
            sx={{
              flex: 1,
            }}
            styles={(theme) => ({
              input: {
                backgroundColor: theme.colors.gray[1],
                color: theme.colors.dark[5],
                fontWeight: 700,
                border: "none",
              },
            })}
            {...form.getInputProps("text")}
          />
          <Button
            w={100}
            size="md"
            radius="sm"
            variant="gradient"
            gradient={{ from: "indigo", to: "blue" }}
            onClick={onClick}
          >
            検索
          </Button>
        </Flex>
        <Flex
          direction="column"
          mx="auto"
          maw={700}
          px={20}
          py={20}
          gap={10}
          sx={(theme) => ({
            borderStyle: "solid",
            borderWidth: 1,
            borderColor: theme.colors.gray[2],
            borderRadius: theme.radius.sm,
          })}
        >
          <TextInput
            label="URL"
            radius="sm"
            size="sm"
            styles={(theme) => ({
              input: {
                backgroundColor: theme.colors.gray[1],
                color: theme.colors.dark[5],
                fontWeight: 700,
                border: "none",
              },
              label: {
                color: theme.colors.dark[4],
                fontWeight: 700,
              },
            })}
            {...form.getInputProps("site")}
          />
          <Select
            clearable
            label="ファイル形式"
            radius="sm"
            size="sm"
            styles={(theme) => ({
              input: {
                backgroundColor: theme.colors.gray[1],
                color: theme.colors.dark[5],
                fontWeight: 700,
                border: "none",
              },
              label: {
                color: theme.colors.dark[4],
                fontWeight: 700,
              },
              item: {
                fontWeight: 700,
                "&[data-selected]": {
                  background: theme.fn.linearGradient(
                    90,
                    theme.colors.indigo[5],
                    theme.colors.blue[5]
                  ),
                },
              },
            })}
            {...form.getInputProps("file")}
            data={[
              { value: "pdf", label: "PDF(.pdf)" },
              { value: "doc", label: "Word(.doc)" },
              { value: "xls", label: "Excel(.xls)" },
              { value: "ppt", label: "PowerPoint(.ppt)" },
            ]}
          />
          <Flex
            direction={{ base: "column", md: "row" }}
            align="center"
            gap={10}
          >
            <DateInput
              clearable
              label="開始日"
              radius="sm"
              size="sm"
              valueFormat="YYYY-MM-DD"
              w="100%"
              styles={(theme) => ({
                input: {
                  backgroundColor: theme.colors.gray[1],
                  color: theme.colors.dark[5],
                  fontWeight: 700,
                  border: "none",
                },
                label: {
                  color: theme.colors.dark[4],
                  fontWeight: 700,
                },
              })}
              {...form.getInputProps("begin")}
            />
            <DateInput
              clearable
              label="終了日"
              radius="sm"
              size="sm"
              valueFormat="YYYY-MM-DD"
              w="100%"
              styles={(theme) => ({
                input: {
                  backgroundColor: theme.colors.gray[1],
                  color: theme.colors.dark[5],
                  fontWeight: 700,
                  border: "none",
                },
                label: {
                  color: theme.colors.dark[4],
                  fontWeight: 700,
                },
              })}
              {...form.getInputProps("end")}
            />
          </Flex>
        </Flex>
      </main>
    </>
  );
}
